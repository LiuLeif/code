name: "test"

#layer {
#  name: "data"
#  type: "Input"
#  top: "data"
#  include {
#    phase: TEST
#  }      
#  input_param {
#    shape {
#      dim: 1
#      dim: 1
#    }
#  }
#}

layer {
  name: "input"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "test_data"
    layer: "TestDataLayer"
  }
}

layer {
  name: "encode1"
  type: "InnerProduct"
  bottom: "data"
  top: "encode1"
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }    
  }
}

layer {
  name: "encode2"
  type: "InnerProduct"
  bottom: "encode1"
  top: "encode2"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }    
  }
}

layer {
  name: "encode3"
  type: "InnerProduct"
  bottom: "encode2"
  top: "encode3"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }    
  }
}

layer {
  name: "decode1"
  type: "InnerProduct"
  bottom: "encode3"
  top: "decode1"

  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }        
  }
}

layer {
  name: "decode2"
  type: "InnerProduct"
  bottom: "decode1"
  top: "decode2"

  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }        
  }
}

layer {
  name: "decode3"
  type: "InnerProduct"
  bottom: "decode2"
  top: "decode3"

  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }        
  }
}

layer {
  name: "decode4"
  type: "InnerProduct"
  bottom: "decode3"
  top: "decode4"

  inner_product_param {
    num_output: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }        
  }
}

layer {
  name: "loss"
  type: "EuclideanLoss"      
  bottom: "decode4"
  bottom: "label"
  top: "l2_error"
  loss_weight: 1
  include {
    phase: TRAIN
  }      
}


