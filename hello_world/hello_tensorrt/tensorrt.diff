2 files changed, 33 insertions(+)
parsers/caffe/caffeParser/caffeParser.cpp | 32 +++++++++++++++++++++++++++++++
parsers/caffe/caffeParser/caffeParser.h   |  1 +

modified   parsers/caffe/caffeParser/caffeParser.cpp
@@ -309,6 +309,29 @@ std::vector<nvinfer1::PluginField> CaffeParser::parseRPROIParam(const trtcaffe::
     return f;
 }
 
+std::vector<nvinfer1::PluginField> CaffeParser::parsePowerParam(const trtcaffe::LayerParameter& msg, CaffeWeightFactory& weightFactory, BlobNameToTensor& tensors)
+{
+    std::vector<nvinfer1::PluginField> f;
+    const trtcaffe::PowerParameter& p = msg.power_param();
+
+    // Memory allocations for plugin field variables
+    float* power = allocMemory<float>();
+    float* scale = allocMemory<float>();
+    float* shift = allocMemory<float>();
+
+    // Intialize the plugin fields with values from the prototxt
+    *power = p.power();
+    f.emplace_back("power", power, PluginFieldType::kFLOAT32, 1);
+
+    *scale = p.scale();
+    f.emplace_back("scale", scale, PluginFieldType::kFLOAT32, 1);
+
+    *shift = p.shift();
+    f.emplace_back("shift", shift, PluginFieldType::kFLOAT32, 1);
+
+    return f;
+}
+
 const IBlobNameToTensor* CaffeParser::parseBuffers(const uint8_t* deployBuffer,
                                                    std::size_t deployLength,
                                                    const uint8_t* modelBuffer,
@@ -498,6 +521,15 @@ const IBlobNameToTensor* CaffeParser::parse(INetworkDefinition& network,
                     pluginName = "RPROI_TRT";
                     f = parseRPROIParam(layerMsg, weights, *mBlobNameToTensor);
                 }
+                else if (layerMsg.type() == "Softmax")
+                {
+                    pluginName = "SOFTMAX";
+                }
+                else if (layerMsg.type() == "Power")
+                {
+                    pluginName = "POWER";
+                    f = parsePowerParam(layerMsg, weights, *mBlobNameToTensor);
+                }
 
                 if (mPluginRegistry.find(pluginName) != mPluginRegistry.end())
                 {
modified   parsers/caffe/caffeParser/caffeParser.h
@@ -60,6 +60,7 @@ private:
     std::vector<nvinfer1::PluginField> parseDetectionOutputParam(const trtcaffe::LayerParameter& msg, CaffeWeightFactory& weightFactory, BlobNameToTensor& tensors);
     std::vector<nvinfer1::PluginField> parseLReLUParam(const trtcaffe::LayerParameter& msg, CaffeWeightFactory& weightFactory, BlobNameToTensor& tensors);
     std::vector<nvinfer1::PluginField> parseRPROIParam(const trtcaffe::LayerParameter& msg, CaffeWeightFactory& weightFactory, BlobNameToTensor& tensors);
+    std::vector<nvinfer1::PluginField> parsePowerParam(const trtcaffe::LayerParameter& msg, CaffeWeightFactory& weightFactory, BlobNameToTensor& tensors);    
     template <typename T>
     T* allocMemory(int size = 1)
     {

[back]